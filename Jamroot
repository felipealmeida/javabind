# (c) Copyright 2012 Felipe Magno de Almeida
#
# Distributed under the Boost Software License, Version 1.0. (See
# accompanying file LICENSE_1_0.txt or copy at
# http://www.boost.org/LICENSE_1_0.txt)

import testing ;
import modules ;

path-constant here : . ;

local search_path = [ modules.peek : BOOST_BUILD_PATH ] ;
search_path += $(here)/tools ;
modules.poke : BOOST_BUILD_PATH : $(search_path) ;

import path ;
import java : java-class jar ;

project javabind ;

alias javabind : /boost//headers /jvm//jvm /boost//filesystem
 : <include>include
 : : <include>include
 ;
explicit javabind ;

alias compile-tests
 : [ compile tests/create_overload.cpp javabind ]
 ;
explicit compile-tests ;

java-class ReadStaticIntAttribute : tests/ReadStaticIntAttribute.java ;
explicit ReadStaticIntAttribute ;
java-class ReadStaticDoubleAttribute : tests/ReadStaticDoubleAttribute.java ;
explicit ReadStaticDoubleAttribute ;
java-class CallVoidMethod : tests/CallVoidMethod.java ;
explicit CallVoidMethod ;
java-class NewObject : tests/NewObject.java ;
explicit NewObject ;
java-class NewObjectByte : tests/NewObjectByte.java ;
explicit NewObjectByte ;
java-class NewObjectChar : tests/NewObjectChar.java ;
explicit NewObjectChar ;
java-class NewObjectShort : tests/NewObjectShort.java ;
explicit NewObjectShort ;
java-class NewObjectInt : tests/NewObjectInt.java ;
explicit NewObjectInt ;
java-class NewObjectLong : tests/NewObjectLong.java ;
explicit NewObjectLong ;
java-class NewObjectDouble : tests/NewObjectDouble.java ;
explicit NewObjectDouble ;
java-class NewObjectFloat : tests/NewObjectFloat.java ;
explicit NewObjectFloat ;

alias runtime-tests
 : [ run tests/create-jvm.cpp javabind /jvm//jvm ]
   [ run tests/read_static_int_attribute.cpp javabind /jvm//jvm : : ReadStaticIntAttribute ]
   [ run tests/read_static_double_attribute.cpp javabind /jvm//jvm : : ReadStaticDoubleAttribute ]
   [ run tests/call_void_method.cpp javabind /jvm//jvm : : CallVoidMethod ]
   [ run tests/new_object.cpp javabind /jvm//jvm : : NewObject NewObjectByte
          NewObjectChar NewObjectDouble NewObjectFloat NewObjectInt NewObjectLong
          NewObjectShort ]
#   [ run tests/new_object_int_constructor.cpp javabind /jvm//jvm : : NewObjectIntConstructor ]
 ;
explicit runtime-tests ;

exe hello_world_demo : demo/hello_world/hello_world.cpp /javabind//javabind ;
explicit hello_world_demo ;

exe inheritance_demo : demo/inheritance/inheritance.cpp /javabind//javabind ;
explicit inheritance_demo ;

exe cpp_bind_demo : demo/cpp_bind/cpp_bind.cpp /javabind//javabind ;
explicit cpp_bind_demo ;
java-class CppBindHelloWorld : demo/cpp_bind/CppBindHelloWorld.java ;
explicit CppBindHelloWorld ;

exe manually_calling_demo : demo/manually_calling/manually_calling.cpp /javabind//javabind ;
explicit manually_calling_demo ;
java-class ManuallyCallingHelloWorld : demo/manually_calling/ManuallyCallingHelloWorld.java ;
explicit ManuallyCallingHelloWorld ;

exe manually_attribute_demo : demo/manually_attribute/manually_attribute.cpp /javabind//javabind ;
explicit manually_attribute_demo ;
java-class ManuallyAttribute : demo/manually_attribute/ManuallyAttribute.java ;
explicit ManuallyAttribute ;

lib cpp_library_demo : demo/cpp_library/cpp_library.cpp /javabind//javabind ;
explicit cpp_library_demo ;
java-class CallingCppLibrary : demo/cpp_library/CallingCppLibrary.java ;
explicit CallingCppLibrary ;

exe bind_function_demo : demo/bind_function/bind_function.cpp /javabind//javabind ;
explicit bind_function_demo ;
java-class BindFunctionHelloWorld : demo/bind_function/BindFunctionHelloWorld.java ;
explicit BindFunctionHelloWorld ;

exe bind_class_demo : demo/bind_class/bind_class.cpp /javabind//javabind
 : <define>FUSION_MAX_VECTOR_SIZE=20 ;
explicit bind_class_demo ;

install hello_world_demo_install : hello_world_demo : <location>stage-demo/hello_world ;
install cpp_bind_demo_install : cpp_bind_demo CppBindHelloWorld : <location>stage-demo/cpp_bind ;
install manually_calling_demo_install : manually_calling_demo ManuallyCallingHelloWorld : <location>stage-demo/manually_calling ;
install manually_attribute_demo_install : manually_attribute_demo ManuallyAttribute : <location>stage-demo/manually_attribute ;
install cpp_library_demo_install : cpp_library_demo CallingCppLibrary : <location>stage-demo/cpp_library ;
install bind_function_demo_install : bind_function_demo BindFunctionHelloWorld : <location>stage-demo/bind_function ;
install bind_class_demo_install : bind_class_demo : <location>stage-demo/bind_class ;
install inheritance_install : inheritance_demo : <location>stage-demo/inheritance ;

alias stage-demo : hello_world_demo_install cpp_bind_demo_install
 manually_calling_demo_install manually_attribute_demo_install cpp_library_demo_install
 bind_function_demo_install bind_class_demo_install
 inheritance_install
 ;
