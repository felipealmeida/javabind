# (c) Copyright 2012 Felipe Magno de Almeida
#
# Distributed under the Boost Software License, Version 1.0. (See
# accompanying file LICENSE_1_0.txt or copy at
# http://www.boost.org/LICENSE_1_0.txt)

import testing ;
import modules ;

path-constant here : . ;

local search_path = [ modules.peek : BOOST_BUILD_PATH ] ;
search_path += $(here)/tools ;
modules.poke : BOOST_BUILD_PATH : $(search_path) ;

import path ;
import java : java-class jar ;

project javabind ;

alias javabind : /boost//headers /jvm//jvm
 : <include>include 
 : : <include>include
 ;
explicit javabind ;

java-class ReadStaticIntAttribute : tests/ReadStaticIntAttribute.java ;
explicit ReadStaticIntAttribute ;
java-class ReadStaticDoubleAttribute : tests/ReadStaticDoubleAttribute.java ;
explicit ReadStaticDoubleAttribute ;
java-class CallVoidMethod : tests/CallVoidMethod.java ;
explicit CallVoidMethod ;
java-class NewObject : tests/NewObject.java ;
explicit NewObject ;
java-class NewObjectIntConstructor : tests/NewObjectIntConstructor.java ;
explicit NewObjectIntConstructor ;

alias runtime-tests
 : [ run tests/create-jvm.cpp javabind /jvm//jvm ]
   [ run tests/read_static_int_attribute.cpp javabind /jvm//jvm : : ReadStaticIntAttribute ]
   [ run tests/read_static_double_attribute.cpp javabind /jvm//jvm : : ReadStaticDoubleAttribute ]
   [ run tests/call_void_method.cpp javabind /jvm//jvm : : CallVoidMethod ]
   [ run tests/new_object.cpp javabind /jvm//jvm : : NewObject ]
   [ run tests/new_object_int_constructor.cpp javabind /jvm//jvm : : NewObjectIntConstructor ]
 ;
explicit runtime-tests ;

exe hello_world_demo : demo/hello_world/hello_world.cpp /javabind//javabind ;
explicit hello_world_demo ;

exe cpp_bind_demo : demo/cpp_bind/cpp_bind.cpp /javabind//javabind ;
explicit cpp_bind_demo ;
java-class CppBindHelloWorld : demo/cpp_bind/CppBindHelloWorld.java ;
explicit CppBindHelloWorld ;

exe manually_calling_demo : demo/manually_calling/manually_calling.cpp /javabind//javabind ;
explicit manually_calling_demo ;
java-class ManuallyCallingHelloWorld : demo/manually_calling/ManuallyCallingHelloWorld.java ;
explicit ManuallyCallingHelloWorld ;

install hello_world_demo_install : hello_world_demo : <location>demos/hello_world ;
install cpp_bind_demo_install : cpp_bind_demo CppBindHelloWorld : <location>demos/cpp_bind ;
install manually_calling_demo_install : manually_calling_demo ManuallyCallingHelloWorld : <location>demos/manually_calling ;

alias demos : hello_world_demo_install cpp_bind_demo_install manually_calling_demo_install ;
